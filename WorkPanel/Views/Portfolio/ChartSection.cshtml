<div class="row">
    <div class="col-md-8">
        <button id="d" type="button" class="btn chart-btn">
            <span style="font-weight: bold">1D</span>
        </button>
        <button id="w" type="button" class="btn chart-btn">
            <span style="font-weight: bold">1W</span>
        </button>
        <button id="m" type="button" class="btn chart-btn">
            <span style="font-weight: bold">1M</span>
        </button>
        <button id="m3" type="button" class="btn chart-btn">
            <span style="font-weight: bold">3M</span>
        </button>
        <button id="y" type="button" class="btn chart-btn">
            <span style="font-weight: bold">1Y</span>
        </button>
        <button id="all" type="button" class="btn chart-btn">
            <span style="font-weight: bold">ALL</span>
        </button>
        <button id="ytd" type="button" class="btn chart-btn">
            <span style="font-weight: bold">YTD</span>
        </button>
    </div>
    <div class="col-md-4" style="text-align: end">
        @*<button id="svg" type="button" class="btn chart-btn">
            <span style="font-weight: bold">SVG</span>
        </button>*@
        <button id="png" type="button" class="btn chart-btn">
            <span style="font-weight: bold">PNG</span>
        </button>
    </div>
</div>
<div id="chart-div">
    <canvas id="placeholder-canvas" width="510" height="385" style="display: block; background: white"></canvas>
    <canvas id="line-chart" width="400" height="300" style="position: absolute; bottom: 0"></canvas>
</div>



<script src="~/lib/chartjs/chart.js"></script>
<script src="~/lib/downloadjs/dist/download.js"></script>
<script src="~/lib/canvas2svg/dist/canvas2svg.js"></script>

<script>
    var timeFormat = 'MM/DD/YYYY HH:mm';
    var currentPeriod = 'day';
    var currentBtcData = [];

    loadChart("day");

    $("#d").click(function() {
        clearChart();
        loadChart("day");
        currentPeriod = 'day';
    });

    $("#w").click(function() {
        clearChart();
        loadChart("week");
        currentPeriod = 'week';
    });

    $("#m").click(function() {
        clearChart();
        loadChart("month");
        currentPeriod = 'month';
    });

    $("#m3").click(function() {
        clearChart();
        loadChart("month3");
        currentPeriod = 'month3';
    });

    $("#y").click(function() {
        clearChart();
        loadChart("year");
        currentPeriod = 'year';
    });

    $("#all").click(function() {
        clearChart();
        loadChart("all");
        currentPeriod = 'all';
    });

    $("#ytd").click(function() {
        clearChart();
        loadChart("ytd");
        currentPeriod = 'ytd';
    });

    $("#svg").click(function() {
        saveSVG();
    });

    $("#png").click(function() {
        savePNG();
    });

    var backgroundColor = 'white';
    Chart.plugins.register({
        beforeDraw: function(c) {
            var ctx = c.chart.ctx;
            ctx.fillStyle = backgroundColor;
            ctx.fillRect(0, 0, c.chart.width, c.chart.height);
        }
    });

    function savePNG() {
        var url_base64 = document.getElementById("line-chart").toDataURL("image/png");
        download(url_base64, "chart.png", "image/png");
    }

    function saveSVG() {
        //var context = document.getElementById("line-chart").getContext("2d");
        //// canvas2svg 'mock' context
        //var svgContext = C2S(500, 500);

        //// new chart on 'mock' context fails:
        //var mySvg = new Chart(svgContext, chartConfig);
    }


    function clearChart() {
        Chart.helpers.each(Chart.instances,
            function(instance) {
                instance.chart.destroy();
            });
    }

    function updateChart() {        
        $.getJSON('/Portfolio/GetChartData?period=' + currentPeriod,
            function(data) {
                var btcLabels = [];
                var btcPoints = [];

                var navLabels = [];
                var navPoints = [];

                data.btc.forEach(function(elem) {
                    btcLabels.push(moment(elem.date).toDate());
                    btcPoints.push(elem.value);
                });

                data.nav.forEach(function(elem) {
                    navLabels.push(moment(elem.date).toDate());
                    navPoints.push(elem.value);
                });

                if (!arraysEqual(btcPoints, currentBtcData)) {
                    clearChart();
                    currentBtcData = btcPoints;
                    var color = Chart.helpers.color;
                    var config = {
                        type: 'line',
                        data: {
                            labels: btcLabels,
                            datasets: [
                                {
                                    label: 'BTC Rate',
                                    yAxisID: 'btc-axis',
                                    backgroundColor: color("red").alpha(0.5).rgbString(),
                                    borderColor: "red",
                                    fill: false,
                                    data: btcPoints,
                                    hitRadius: 10,
                                    radius: 0,
                                    tension: 0.1
                                },
                                {
                                    label: 'NAV Change',
                                    yAxisID: 'nav-axis',
                                    backgroundColor: color("blue").alpha(0.1).rgbString(),
                                    borderColor: "blue",
                                    fill: true,
                                    data: navPoints,
                                    hitRadius: 10,
                                    radius: 0,
                                    spanGaps: false,
                                    tension: 0.1

                                }
                            ]
                        },
                        options: {
                            title: {
                                text: 'Chart.js Time Scale'
                            },
                            scales: {
                                xAxes: [
                                    {
                                        type: 'time',
                                        time: {
                                            parser: timeFormat,
                                            // round: 'day'
                                            tooltipFormat: 'll HH:mm'
                                        },
                                        scaleLabel: {
                                            display: true,
                                            // labelString: 'Date'
                                        }
                                    }
                                ],
                                yAxes: [
                                    {
                                        id: 'btc-axis',
                                        scaleLabel: {
                                            display: true,
                                        }
                                    },
                                    {
                                        id: 'nav-axis',
                                        position: 'right',
                                        scaleLabel: {
                                            display: true,
                                            // labelString: 'value'
                                        }
                                    }
                                ]
                            },

                            legend: {
                                onClick: function(event, legendItem) {
                                    //get the index of the clicked legend
                                    var index = legendItem.datasetIndex;
                                    //toggle chosen dataset's visibility
                                    myChart.data.datasets[index].hidden =
                                        !myChart.data.datasets[index].hidden;
                                    //toggle the related labels' visibility
                                    myChart.options.scales.yAxes[index].display =
                                        !myChart.options.scales.yAxes[index].display;
                                    myChart.update();
                                }
                            }
                        }
                    };
                    var ctx = document.getElementById('line-chart').getContext('2d');
                    chartConfig = config;
                    var myChart = new Chart(ctx, config);
                }
            });
    }

    function arraysEqual(arr1, arr2) {
        if (arr1.length !== arr2.length)
            return false;
        for (var i = arr1.length; i--;) {
        if(arr1[i] !== arr2[i])
                return false;
        }
        return true;
    }

    var chartConfig;

    function loadChart(period) {
        $.getJSON('/Portfolio/GetChartData?period=' + period,
            function(data) {
                var btcLabels = [];
                var btcPoints = [];

                var navLabels = [];
                var navPoints = [];

                data.btc.forEach(function(elem) {
                    btcLabels.push(moment(elem.date).toDate());
                    btcPoints.push(elem.value);
                });

                data.nav.forEach(function(elem) {
                    navLabels.push(moment(elem.date).toDate());
                    navPoints.push(elem.value);
                });

                currentBtcData = btcPoints;

                var color = Chart.helpers.color;
                var config = {
                    type: 'line',
                    data: {
                        labels: btcLabels,
                        datasets: [
                            {
                                label: 'BTC Rate',
                                yAxisID: 'btc-axis',
                                backgroundColor: color("red").alpha(0.5).rgbString(),
                                borderColor: "red",
                                fill: false,
                                data: btcPoints,
                                hitRadius: 10,
                                radius: 0,
                                tension: 0.1
                            },
                            {
                                label: 'NAV Change',
                                yAxisID: 'nav-axis',
                                backgroundColor: color("blue").alpha(0.1).rgbString(),
                                borderColor: "blue",
                                fill: true,
                                data: navPoints,
                                hitRadius: 10,
                                radius: 0,
                                spanGaps: false,
                                tension: 0.1

                            }
                        ]
                    },
                    options: {
                        title: {
                            text: 'Chart.js Time Scale'
                        },
                        scales: {
                            xAxes: [
                                {
                                    type: 'time',
                                    time: {
                                        parser: timeFormat,
                                        // round: 'day'
                                        tooltipFormat: 'll HH:mm'
                                    },
                                    scaleLabel: {
                                        display: true,
                                        // labelString: 'Date'
                                    }
                                }
                            ],
                            yAxes: [
                                {
                                    id: 'btc-axis',
                                    scaleLabel: {
                                        display: true,
                                    }
                                },
                                {
                                    id: 'nav-axis',
                                    position: 'right',
                                    scaleLabel: {
                                        display: true,
                                        // labelString: 'value'
                                    }
                                }
                            ]
                        },

                        legend: {
                            onClick: function(event, legendItem) {
                                //get the index of the clicked legend
                                var index = legendItem.datasetIndex;
                                //toggle chosen dataset's visibility
                                myChart.data.datasets[index].hidden =
                                    !myChart.data.datasets[index].hidden;
                                //toggle the related labels' visibility
                                myChart.options.scales.yAxes[index].display =
                                    !myChart.options.scales.yAxes[index].display;
                                myChart.update();
                            }
                        }
                    }
                };
                var ctx = document.getElementById('line-chart').getContext('2d');
                chartConfig = config;
                var myChart = new Chart(ctx, config);
            });
    }

    setInterval(updateChart, 15000);

   
</script>

